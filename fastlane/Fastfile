default_platform(:ios)

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :beta do |options|
    # Flexible parameter resolution: CLI option â†’ ENV fallback
    key_id = options[:appstore_key_id] || ENV["APPSTORE_KEY_ID"]
    issuer_id = options[:appstore_issuer_id] || ENV["APPSTORE_ISSUER_ID"]
#     key_filepath = options[:key_filepath] || ENV["KEY_FILEPATH"] || "./fastlane/Api_key.p8"
    key_filepath = options[:key_filepath] || ENV["KEY_FILEPATH"]
    match_password = options[:match_password] || ENV["MATCH_PASSWORD"]
    match_git_basic_authorization = options[:match_git_basic_authorization] || ENV["MATCH_GIT_BASIC_AUTHORIZATION"]

    # Prepares the Fastlane environment for use in CI systems
    setup_ci(
      provider: "circleci"
    )

    # Create an App Store Connect API key using either passed options or environment variables
    api_key = app_store_connect_api_key(
      key_id: key_id,
      issuer_id: issuer_id,
      key_filepath: key_filepath
    )

    # Downloads code signing credentials using the API key
    match(
      type: "appstore",
      app_identifier: "org.hekmatullahamin.deployiosapp.DeployIosApp",
      readonly: true,
      api_key: api_key,
      git_basic_authorization: match_git_basic_authorization
    )

    # Retrieves the most recent TestFlight build number
    latest = latest_testflight_build_number(
      app_identifier: "org.hekmatullahamin.deployiosapp.DeployIosApp",
      api_key: api_key
    )

    # Increment build number locally
    increment_build_number(
        build_number: latest + 1,
        xcodeproj: "iosApp/iosApp.xcodeproj"
    )

    # Build ios app
    build_ios_app(
        scheme: "iosApp",
        project: "iosApp/iosApp.xcodeproj",
        output_name: "DeployIosApp.ipa",
        output_directory: "iosApp/build"
    )

    # Upload to TestFlight
    pilot(
      api_key: api_key,
      skip_waiting_for_build_processing: true
    )
  end
end

